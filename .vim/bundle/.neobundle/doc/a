let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
map! <S-Insert> <MiddleMouse>
imap <D-BS> 
imap <M-BS> 
imap <M-Down> }
inoremap <D-Down> <C-End>
imap <M-Up> {
inoremap <D-Up> <C-Home>
noremap! <M-Right> <C-Right>
noremap! <D-Right> <End>
noremap! <M-Left> <C-Left>
noremap! <D-Left> <Home>
inoremap <silent> <Plug>NERDCommenterInInsert  <BS>:call NERDComment(0, "insert")
nnoremap  g;
vnoremap  "*y
nnoremap 		 :h 
nnoremap 	  :h 
nnoremap <silent> <expr>  JpAltCv()
vmap  d"*P
nnoremap <silent> w :call MyWincmdW()
nnoremap <silent>  :call MyWincmdW()
nnoremap  Vy:@"
nnoremap <silent> 3 :vsp
nnoremap <silent> 2 :sp
nnoremap <silent> 1 :only
nnoremap <silent>  :nohlsearch:set iminsert=0
nmap d :cs find d =expand("<cword>")
nmap i :cs find i ^=expand("<cfile>")$
nmap f :cs find f =expand("<cfile>")
nmap e :cs find e =expand("<cword>")
nmap t :cs find t =expand("<cword>")
nmap c :cs find c =expand("<cword>")
nmap g :cs find g =expand("<cword>")
nmap s :cs find s =expand("<cword>")
nnoremap # #zz
nnoremap * *zz
noremap + +
map ,,f :python FixTable()
map ,,c :python CreateTable()
nmap ,caL <Plug>CalendarH
nmap ,cal <Plug>CalendarV
nmap <silent> ,ig <Plug>IndentGuidesToggle
nnoremap <silent> ,b :CommandTBuffer
nnoremap <silent> ,t :CommandT
nmap <silent> ,w,t <Plug>VimwikiTabMakeDiaryNote
nmap <silent> ,w,w <Plug>VimwikiMakeDiaryNote
nmap <silent> ,wi <Plug>VimwikiDiaryIndex
nmap <silent> ,ws <Plug>VimwikiUISelect
nmap <silent> ,wt <Plug>VimwikiTabIndex
nmap <silent> ,ww <Plug>VimwikiIndex
nmap ,gd :Gtags -d =expand("<cword>")
nmap ,gr :Gtags -r =expand("<cword>")
nmap ,gf :Gtags -f =expand("<cfile>")
nmap ,gg :Gtags -g =expand("<cword>")
nmap ,gs :Gtags -s =expand("<cword>")
map <silent> ,r :call LoadQuickRun():<Plug>(quickrun)
nnoremap ,vf :silent! NeoBundleSource vimfiler:VimFiler -split -simple -winwidth=35 -no-quit
vnoremap ,t :Tabularize /
nnoremap <silent> ,qr :Unite quickrun-select
vmap ,, <Plug>NERDCommenterToggle
nmap ,, <Plug>NERDCommenterToggle
nnoremap <silent> ,>	 :UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file
noremap ,yr :YRShow
vnoremap ,eval y:@"
nnoremap ,do Vy:@"
nnoremap ,j L
nnoremap ,k H
nnoremap ,bd :bdelete
nnoremap ,bp :bp
nnoremap ,bn :bn
nnoremap ,tn :tabnew
nnoremap ,th :tabprevious
nnoremap ,tl :tabnext
nmap ,PP "+p
nmap ,pp "+p
nmap ,Y "+yy
nmap ,y "+y
nnoremap ,eM :edit $DROPBOX_DIR/documents/memo
nnoremap ,em :edit $DROPBOX_DIR/documents/memo/memo.memo
nnoremap ,ep :edit $MYVIMRCPLUGIN
nnoremap ,eg :edit $MYGVIMRC
nnoremap ,ev :edit $MYVIMRC
noremap - -
vnoremap /r "xy;%s/=escape(@x, '\\/.*$^~[]')//gc<Left><Left><Left>"
vnoremap <silent> // y/=escape(@", '\\/.*$^~[]')
vnoremap : ;
nnoremap : ;
vnoremap ; :
nnoremap ; :
vnoremap < <gv
vnoremap > >gv
cnoremap Â¥ \
inoremap Â¥ \
nnoremap G Gzz
noremap <silent> J :JpAltJ
vmap <silent> K :silent! NeoBundleSource vim-ref<Plug>(ref-keyword)
nmap <silent> K :silent! NeoBundleSource vim-ref<Plug>(ref-keyword)
nnoremap N Nzz
map Q gq
nnoremap R gR
xmap S <Plug>VSurround
nmap cs <Plug>Csurround
nnoremap <silent> ciy ciw0:let@/=@1:noh
vnoremap <silent> cy c0:let@/=@1:noh
nnoremap <silent> cy ce0:let@/=@1:noh
nmap ds <Plug>Dsurround
xmap gS <Plug>VgSurround
vmap gx <Plug>(openbrowser-smart-search)
nmap gx <Plug>(openbrowser-smart-search)
nnoremap gb `.zz
nnoremap g# g#zz
nnoremap g* g*zz
nnoremap <expr> h col('.') == 1 && foldlevel(line('.')) > 0 ? 'zc' : 'h'
nnoremap j gj
nnoremap k gk
nnoremap <expr> l foldclosed(line('.')) != -1 ? 'zo' : 'l'
nnoremap n nzz
xmap s <Plug>Vsurround
nnoremap vb `[v`]
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
nnoremap <F12> :Tlistz
map <S-Insert> <MiddleMouse>
map <M-Down> }
noremap <D-Down> <C-End>
map <M-Up> {
noremap <D-Up> <C-Home>
noremap <M-Right> <C-Right>
noremap <D-Right> <End>
noremap <M-Left> <C-Left>
noremap <D-Left> <Home>
vnoremap <silent> <Plug>(ref-keyword) :call ref#K('visual')
nnoremap <silent> <Plug>(ref-keyword) :call ref#K('normal')
nmap <silent> <Plug>NERDCommenterAppend :call NERDComment(0, "append")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")
vnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")
vnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(1, "nested")
nnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(0, "nested")
vnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(1, "alignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")
vnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(1, "alignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")
vmap <silent> <Plug>NERDCommenterYank :call NERDComment(1, "yank")
nmap <silent> <Plug>NERDCommenterYank :call NERDComment(0, "yank")
vnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(1, "invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(0, "invert")
vnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(1, "sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(0, "sexy")
vnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(1, "minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(0, "minimal")
vnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(1, "toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(0, "toggle")
vnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(1, "norm")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(0, "norm")
nnoremap <silent> <Plug>(vimshell_create) :VimShellCreate
nnoremap <silent> <Plug>(vimshell_switch) :VimShell
nnoremap <silent> <Plug>(tweetvim_action_remove_status) :call tweetvim#action('remove_status')
nnoremap <silent> <Plug>(tweetvim_action_search) :call tweetvim#action('search')
nnoremap <silent> <Plug>(tweetvim_action_open_links) :call tweetvim#action('open_links')
nnoremap <silent> <Plug>(tweetvim_action_buffer_next) :call tweetvim#action('buffer_next')
nnoremap <silent> <Plug>(tweetvim_action_buffer_previous) :call tweetvim#action('buffer_previous')
nnoremap <silent> <Plug>(tweetvim_action_page_previous) :call tweetvim#action('page_previous')
nnoremap <silent> <Plug>(tweetvim_action_page_next) :call tweetvim#action('page_next')
nnoremap <silent> <Plug>(tweetvim_action_reload) :call tweetvim#action('reload')
nnoremap <silent> <Plug>(tweetvim_action_qt) :call tweetvim#action('qt')
nnoremap <silent> <Plug>(tweetvim_action_retweet) :call tweetvim#action('retweet')
nnoremap <silent> <Plug>(tweetvim_action_remove_favorite) :call tweetvim#action('remove_favorite')
nnoremap <silent> <Plug>(tweetvim_action_favorite) :call tweetvim#action('favorite')
nnoremap <silent> <Plug>(tweetvim_action_user_timeline) :call tweetvim#action('user_timeline')
nnoremap <silent> <Plug>(tweetvim_action_in_reply_to) :call tweetvim#action('in_reply_to')
nnoremap <silent> <Plug>(tweetvim_action_reply) :call tweetvim#action('reply')
nnoremap <silent> <Plug>(tweetvim_action_enter) :call tweetvim#action('enter')
nnoremap <silent> <Plug>CalendarH :cal Calendar(1)
nnoremap <silent> <Plug>CalendarV :cal Calendar(0)
vnoremap <Plug>(openbrowser-smart-search) :call openbrowser#_keymapping_smart_search('v')
nnoremap <Plug>(openbrowser-smart-search) :call openbrowser#_keymapping_smart_search('n')
vnoremap <Plug>(openbrowser-search) :call openbrowser#_keymapping_search('v')
nnoremap <Plug>(openbrowser-search) :call openbrowser#_keymapping_search('n')
vnoremap <Plug>(openbrowser-open) :call openbrowser#_keymapping_open('v')
nnoremap <Plug>(openbrowser-open) :call openbrowser#_keymapping_open('n')
nmap <Nul><Nul>d :vert scs find d =expand("<cword>")
nmap <Nul><Nul>i :vert scs find i ^=expand("<cfile>")$
nmap <Nul><Nul>f :vert scs find f =expand("<cfile>")
nmap <Nul><Nul>e :vert scs find e =expand("<cword>")
nmap <Nul><Nul>t :vert scs find t =expand("<cword>")
nmap <Nul><Nul>c :vert scs find c =expand("<cword>")
nmap <Nul><Nul>g :vert scs find g =expand("<cword>")
nmap <Nul><Nul>s :vert scs find s =expand("<cword>")
nmap <Nul>d :scs find d =expand("<cword>")
nmap <Nul>i :scs find i ^=expand("<cfile>")$
nmap <Nul>f :scs find f =expand("<cfile>")
nmap <Nul>e :scs find e =expand("<cword>")
nmap <Nul>t :scs find t =expand("<cword>")
nmap <Nul>c :scs find c =expand("<cword>")
nmap <Nul>g :scs find g =expand("<cword>")
nmap <Nul>s :scs find s =expand("<cword>")
nnoremap <SNR>12_[vimshell] :VimShell
nnoremap <silent> <C-F7> :execute "QuickRun ".g:quickrun_compile_command[&filetype"]
nnoremap <silent> <F7> :QuickRun -outputter quickfix
nnoremap <F6> :QuickRun -outputter error:buffer:quickfix -args ''<Left>
nnoremap <silent> <F5> :QuickRun
nnoremap <silent> <S-F9> :call ColorRoller.unroll()
nnoremap <silent> <F9> :call ColorRoller.roll()
nnoremap <silent> <SNR>12_[unite]a :UniteWithBufferDir -winheight=100 -input= -buffer-name=files buffer file_mru bookmark file tab
nnoremap <silent> <SNR>12_[unite]u :Unite source
nnoremap <silent> <SNR>12_[unite]m :Unite file_mru
nnoremap <silent> <SNR>12_[unite]o :Unite -no-quit -buffer-name=font font
nnoremap <silent> <SNR>12_[unite]t :Unite -buffer-name=tab tab
nnoremap <silent> <SNR>12_[unite]c :Unite -buffer-name=command command
nnoremap <silent> <SNR>12_[unite]j :Unite -buffer-name=jump jump
nnoremap <silent> <SNR>12_[unite]w :Unite -buffer-name=window window
nnoremap <silent> <SNR>12_[unite]r :Unite -buffer-name=register register
nnoremap <silent> <SNR>12_[unite]fr :UniteWithBufferDir  -buffer-name=files_rec/hsync file_rec/async
nnoremap <silent> <SNR>12_[unite]f :UniteWithBufferDir  -buffer-name=files file
nnoremap <silent> <SNR>12_[unite]b :Unite -no-start-insert -buffer-name=buffer_tab buffer_tab
nnoremap <SNR>12_[unite] <Nop>
vmap <BS> "-d
inoremap  <Home>
cnoremap  <Home>
inoremap  <Left>
cnoremap  <Left>
cnoremap  <End>
inoremap  <Right>
cnoremap  <Right>
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap  <BS>
imap  <Plug>Isurround
inoremap  u
cmap  *
imap  "*pa
inoremap <silent>  :set iminsert=0
inoremap <expr> ,dt strftime('%H:%M:%S')
inoremap <expr> ,dd strftime('%Y/%m/%d')
inoremap <expr> ,df strftime('%Y/%m/%d %H:%M:%S')
inoremap ,time =strftime('%H:%M')
inoremap ,date =strftime('%Y/%m/%d (%a)')
cnoremap ,/ /
cnoremap <expr> ,time strftime('%Y%m%d%H%M')
cnoremap <expr> ,date strftime('%Y%m%d')
cnoremap <expr> / getcmdtype()=='/' ? '\/' : '/'
nnoremap Ã¢ g,
inoremap jj 
inoreabbr <expr> dl- repeat('-','80')
inoreabbr <expr> dl* repeat('*','80')
let &cpo=s:cpo_save
unlet s:cpo_save
set ambiwidth=double
set autoindent
set autowrite
set background=dark
set backspace=indent,eol,start
set backup
set backupdir=~/.vimbackup
set cmdheight=2
set complete=.,w,b,u,t,i,k
set cscopetag
set cscopeverbose
set diffopt=filler,vertical
set display=lastline
set noequalalways
set expandtab
set fileencodings=iso-2022-jp-3,euc-jisx0213,cp932,guess,ucs-bom,latin1,iso-2022-jp-3,utf-8,euc-jisx0213,euc-jp
set formatexpr=autofmt#japanese#formatexpr()
set grepprg=grep\ -nH\ $*
set guifont=Ricty\ Regular\ for\ Powerline:h16
set guioptions=gmrLtcb
set guitablabel=%M%t
set helplang=ja
set hlsearch
set ignorecase
set imdisableactivate
set iminsert=0
set imsearch=0
set incsearch
set langmenu=ja_ja.utf-8.macvim
set laststatus=2
set linespace=1
set macmeta
set migemo
set migemodict=/Applications/MacVim.app/Contents/Resources/vim/runtime/dict/migemo-dict
set mouse=a
set printexpr=system('open\ -a\ Preview\ '.v:fname_in)\ +\ v:shell_error
set report=0
set ruler
set runtimepath=~/.vim/bundle/snake.vim,~/.vim/bundle/viminesweeper,~/.vim/bundle/sudoku_game,~/.vim/bundle/TeTrIs.vim,~/.vim/bundle/mahjong-vim,~/.vim/bundle/invader-vim,~/.vim/bundle/gal-vim,~/.vim/bundle/unite-mcdonalds-vim,~/.vim/bundle/vimwiki,~/.vim/bundle/unite-u-nya-,~/.vim/bundle/unite-homo,~/.vim/bundle/command-t,~/.vim/bundle/L9,~/.vim/bundle/mkdpreview-vim,~/.vim/bundle/vim-hier,~/.vim/bundle/outline.vim,~/.vim/bundle/quickfixstatus,~/.vim/bundle/vim-indent-guides,~/.vim/bundle/vim-powerline,~/.vim/bundle/wombat256.vim,~/.vim/bundle/ttoc,~/.vim/bundle/vim-showtime,~/.vim/bundle/vim-editvar,~/.vim/bundle/vim-prettyprint,~/.vim/bundle/SingleCompile,~/.vim/bundle/open-browser.vim,~/.vim/bundle/vim-fugitive,~/.vim/bundle/surround.vim,~/.vim/bundle/Vimpusher,~/.vim/bundle/calendar-vim,~/.vim/bundle/chalice,~/.vim/bundle/TweetVim-powerline-theme,~/.vim/bundle/TweetVim,~/.vim/bundle/vimshell,~/.vim/bundle/sequence,~/.vim/bundle/RST-Tables,~/.vim/bundle/The-NERD-Commenter,~/.vim/bundle/tabular,~/.vim/bundle/unite-colors
set scrolloff=1
set shiftwidth=4
set showbreak=+++
set showmatch
set showtabline=2
set smartcase
set smartindent
set smarttab
set noswapfile
set tabline=%!MakeTabLine()
set tabstop=4
set tags=./tags
set termencoding=utf-8
set undodir=~/.vimundo
set undofile
set viminfo='100,<50,s10,h,!
set visualbell
set wildmenu
set wildmode=list:full
set window=24
set nowrapscan
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
silent! argdel *
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe '1resize ' . ((&lines * 19 + 12) / 25)
exe '2resize ' . ((&lines * 1 + 12) / 25)
argglobal
edit .vim/bundle/vimdoc-ja/doc/starting.jax
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> <silent> <SwipeRight> :ta
nmap <buffer> <silent> <SwipeLeft> :po
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal nobuflisted
setlocal buftype=help
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i,k
setlocal concealcursor=nc
setlocal conceallevel=2
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'help'
setlocal filetype=help
endif
setlocal foldcolumn=0
setlocal nofoldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=autofmt#japanese#formatexpr()
setlocal formatoptions=tcroql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=!-~,^*,^|,^\",192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal macmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal migemo
setlocal modeline
setlocal nomodifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal readonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!Pl#Statusline(4,1)
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'help'
setlocal syntax=help
endif
setlocal tabstop=8
setlocal tags=~/.vim/bundle/vimdoc-ja/.git/help.tags,~/.vim/bundle/vimdoc-ja/.git/tags,./tags
setlocal textwidth=78
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 1174 - ((1 * winheight(0) + 9) / 19)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1174
normal! 07l
lcd ~/.vim/bundle/vimdoc-ja/doc
wincmd w
argglobal
enew
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i,k
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != ''
setlocal filetype=
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=autofmt#japanese#formatexpr()
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal macmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal migemo
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!Pl#Statusline(0,0)
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != ''
setlocal syntax=
endif
setlocal tabstop=4
setlocal tags=~/.git/tags,./tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
lcd ~/
wincmd w
exe '1resize ' . ((&lines * 19 + 12) / 25)
exe '2resize ' . ((&lines * 1 + 12) / 25)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :

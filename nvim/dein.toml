[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
# hook_post_update = '''
    # if dein#util#_is_windows()
        # let cmd = 'tools\\update-dll-mingw'
    # elseif dein#util#_is_cygwin()
        # let cmd = 'make -f make_cygwin.mak'
    # elseif dein#util#_is_mac()
        # let cmd = 'make -f make_cygwin.mak'
    # elseif executable('gmake')
        # let cmd = 'gmake'
    # else
        # let cmd = 'make'
    # endif
    # let g:dein#plugin.build = cmd
# '''

[[plugins]]
repo = 'Shougo/denite.nvim'
if = ''' has('python3') '''
hook_post_source = '''
    call denite#custom#option('default', 'reversed', 1)

    call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>')
    call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>')
'''

hook_add = '''
    nmap <Leader>a <SID>[denite]
    nnoremap <SID>[denite] <Nop>

    nnoremap <silent> <SID>[denite]b :<C-u>Denite buffer<CR>
    nnoremap <silent> <SID>[denite]f :<C-u>Denite file_rec<CR>
    nnoremap <silent> <SID>[denite]g :<C-u>Denite grep<CR>
    nnoremap <silent> <SID>[denite]r :<C-u>Denite register<CR>
    nnoremap <silent> <SID>[denite]l :<C-u>Denite -buffer-name=search line<CR>
    nnoremap <silent> <SID>[denite]c :<C-u>Denite command<CR>

    nnoremap <silent> <SID>[denite]y :<C-u>Denite neoyank<CR>
    nnoremap <silent> <SID>[denite]m :<C-u>Denite file_mru<CR>
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'h1mesuke/vim-alignta'
hook_add = '''
    let g:Align_xstrlen=3
    vnoremap <Leader>a :Alignta<Space>
    xmap <silent><expr> as mode() !=# 'v' ? ':Alignta \S\+'."\<CR>" : 'as'
'''

[[plugins]]
repo = 'vim-scripts/The-NERD-Commenter'
hook_add = '''
    let g:NERDCreateDefaultMappings = 0
    let g:NERDSpaceDelims           = 1
    nmap <Leader>c <Plug>NERDCommenterToggle
    vmap <Leader>c <Plug>NERDCommenterToggle
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_post_source = '''
    call lightline#enable()
'''

[[plugins]]
repo = 'glidenote/memolist.vim'
depends = ['denite.vim']
hook_add = '''
    let g:memolist_memo_suffix = 'md'
    let g:memolist_denite = 1
    nnoremap <Leader>mn :MemoNew<CR>
    nnoremap <Leader>ml :MemoList<CR>
    nnoremap <Leader>mg :MemoList<CR>
'''

[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'vim-scripts/scratch-utility'
if = ''' ! has('kaoriya') '''

[[plugins]]
repo = 'mrk21/yaml-vim'
on_ft = ['yaml']

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
"    colorscheme iceberg
'''

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']

[[plugins]]
repo = 'jelera/vim-javascript-syntax'
on_ft = ['javascript']

[[plugins]]
repo = 'kchmck/vim-coffee-script'
on_ft = ['coffee']

[[plugins]]
repo = 'moll/vim-node'
on_ft = ['coffee']

[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['javascript', 'coffee']

[[plugins]]
repo = 'w0rp/ale'
if = ''' has('nvim') '''
hook_add = '''
" let g:ale_ruby_rubocop_options='--config .rubocop_todo.yml'
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
    let g:deoplete#enable_at_startup = 1
'''
if = ''' has('python3') '''

[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = ['ruby']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['Shougo/context_filetype.vim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'rking/ag.vim'

[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = ['puml']

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    nmap <C-n> :NERDTreeToggle<CR>
    let NERDTreeShowBookmarks=1
    let g:NERDTreeDirArrows = 1
    let g:NERDTreeDirArrowExpandable  = '|'
    let g:NERDTreeDirArrowCollapsible = '>'

    " function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
        " exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
        " exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
    " endfunction
    function! NERDTreeHighlightFile(extension, fg, bg)
        exec 'autocmd filetype nerdtree syn match NERDTreeTxtFile #^\s\+.*'. a:extension .'$#'
        exec 'autocmd filetype nerdtree highlight NERDTreeTxtFile ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:bg .' guifg='. a:fg
    endfunction

    " call NERDTreeHighlightFile('txt', 'blue', 'black')
    " call NERDTreeHighlightFile('py',     'yellow',  'none', 'yellow',  '#151515')
    call NERDTreeHighlightFile('md',     'blue',    'black')
    " call NERDTreeHighlightFile('sh',     'blue',    'none', '#3366FF', '#151515')
    " call NERDTreeHighlightFile('yml',    'yellow',  'none', 'yellow',  '#151515')
    " call NERDTreeHighlightFile('config', 'yellow',  'none', 'yellow',  '#151515')
    " call NERDTreeHighlightFile('conf',   'yellow',  'none', 'yellow',  '#151515')
    " call NERDTreeHighlightFile('json',   'yellow',  'none', 'yellow',  '#151515')
    " call NERDTreeHighlightFile('html',   'yellow',  'none', 'yellow',  '#151515')
    " call NERDTreeHighlightFile('styl',   'cyan',    'none', 'cyan',    '#151515')
    " call NERDTreeHighlightFile('css',    'cyan',    'none', 'cyan',    '#151515')
    " call NERDTreeHighlightFile('rb',     'Red',     'none', 'red',     '#151515')
    " call NERDTreeHighlightFile('js',     'Red',     'none', '#ffa500', '#151515')
    " call NERDTreeHighlightFile('php',    'Magenta', 'none', '#ff00ff', '#151515')
'''

# [[plugins]]
# repo = 'Xuyuanp/nerdtree-git-plugin'
# depends = ['nerdtree.vim']

[[plugins]]
repo = 'hotwatermorning/auto-git-diff'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
depends = ['nerdtree.vim']


[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = ['markdown', 'rst']
hook_add = '''
    " let g:table_mode_corner='|'
    let g:table_mode_corner_corner='+'
    let g:table_mode_header_fillchar='='
'''

[[plugins]]
repo = 'martinda/Jenkinsfile-vim-syntax'

[[plugins]]
repo = 'amiorin/vim-textile'
on_ft = ['textile']

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'thinca/vim-quickrun'

hook_add = '''
let g:quickrun_config = {
            \ 'javascript': {
            \ "command": "node"
            \ },
            \ "coffeescript": {
            \ "command": "coffee"
            \ }
            \ }
nnoremap <silent><F5>  :QuickRun<CR>
'''

[[plugins]]
repo = 'vimplugin/project.vim'


[[plugins]]
repo = 'udalov/kotlin-vim'
